1. 알파벳 중복 없이 정렬해서 출력하는 코드는?
 - cut -f1 grades | sort | uniq
 - sort grades | cut -f1 | uniq
 - cut -c1 grades | sort | uniq
 - cut -f1 grades | sort | uniq

2. sort -n : string -> num
 1, 11, 111, 2
 1, 2, 11, 111


3. git
 -여러 파일을 한꺼번에 스테이징하기
  git add .
 - git commit -> txt
   git commit -m "your msg"

- git commit -m "week 4"
*매 수업에 커밋으로 파일을 저장하는 연습하기

4. 문서 편집기
- vi, vim, emacs, notepad++. ...
- "vi"sual editor
  - vim - vi improved (정규 표현식, ...)
- 역할:  프롬프트에서 파일을 직접 편집할 수 있게 해주는 툴
- 특징
  * 화면 단위 편집기
  * 유낙스 계열에서 가장 많이 사용함
  * 텍스트 편집 기능만 제공함
  * "less"
  * 모드: 일반 모드 <-> 입력 모드 <-> 명령 모드[ESC 키로 모드 전환]
  * 명령 모드: 파일 저장, 덮어쓰거나 빠져나가거나 등
    => vi로 파일 열기 -> 입력 모드 ->  ESC -> 빠져나가기
  * 입력 모드:
    i: 현 커서에서 입력
    a: 현 커서 한 칸 뒤에서 입력
    o: 한 줄 추가 후 입력
  * 명령 모드
    :w(저장) q!(종료) + enter

- 파일 아무거나 열어서 수정, 저장, 나오기

- set -o vi(한번만)

[2교시]

 5. 패턴 매칭
   - 프롬프트에서 셸, 프로그램이 작동함.
   grep Linux sample.txt
   - 프롬프트는 우리가 명령을 실행하는 곳
   - 셸은 사용자와 리눅스 운영체제를 연결해 주는 매개체

   리눅스 - 셸, 프롬프트 - 사용자
  - 셸의 역할은 명령 실행, 와일드카드 및 파이프라인을 처리
  $HOME/.bashrc 

   grep Linux * txt
   *.txt => sample.txt, a.txt, ...
    - 셸이 패턴매칭을 처리하여 결과물을 프로그램에 보낸다.
    - head xxx | grep | ....

  <와일드카드 - 역할>
    - *
      - zero or more
      - *.txt : .txt, animals.txt, (가능), a.txtt(불가)
      - 0개 이상의 연속열과 일치하는

    -?
      - 1개 매칭
        ex) ch1 ch2 ch3 ... ch100
        grep Linux ch? # 한 자리수만 매칭(2자리수 이상 = 동일한 개수의 ? 필요)

    - [ ]
     - 대괄호 안에 열거되어 있는 것 중 일치하는 문자열 1개가 있을 때
       grep Linux ch[12345] # 12(x) 123(x)
       grep Linux ch[1-5]


  퀴즈1). 짝수로 끝나는 모든 파일
  grep Linux ch[24680] 45 (x)
  grep Linux ch*[24680]
  
  퀴즈2). 대문자로 시작하고, 언더스코어가 포함되어 있는 파이썬 파일 매칭
  ls [A-Z]*_.py # name_lee.py (x)
  grep Linux [A-Z]*_* .py
  
  
  퀴즈3). /etc 디렉터리 안에 파일 확장자가 .conf인 파일 목록 조회하기
  ls /etc/*.conf (A)
  ls -l /etc | grep ".conf" (B) x
  ls -l /etc | grep -w conf 

   - 매칭되는 파일이 없으면 에러 발생
    ls *.doc
   - 디렉터리 경로, 파일명


6. 변수 평가
  * "평가" - 변수를 리터럴 값으로 치환하여 값을 평가함
$VAR - 이미 지정된 변수
$var - 사용자가 지정하는 변수
    ls $var
       -> var=./notes/w3.txt
    ls ./notes/w3.txt

 - $HOME - 루트 디렉터리
 - $USER - 사용자명

 -echo
 -printenv

 - 변수 설정하기
  name-Lee
  * 공백이 없어야 함
  * 셸은 공백을 프로그램으로 인식함
  * 변수=값
  * 변수를 사용할 경우 "$변수형" 형태로 사용한다

예제). age라는 변수에 자신의 나이를 담고 "내 나이는 ...살이다" 변수를 이용해서 출력한다.
 echo my age is $age


- dir1=$HOME/notes/chapter1/
$dir1
- cd $dir1

7. 패턴과 변수
mammals
   ㄴ lizard.txt
   ㄴ snake.txt
   ㄴ ....txt
reptiles

mv <from> <to>
# 변수에 담아 이동시키려면?
 - dir1=mammals/*.txt
   mv $dir1 reptiles

   dir2="lizard.txt snake.txt"
   mv $dlr2 retile
# 패턴매칭으로 이동시키려면?
 -mv mammals/*.txt reptiles

 8. alias
  - 단축어를 별명으로 설정하기
  - alias uniqc="uniq -c"
  uniqc | ...
  - removeall="rm -r"

  - shadowing
    grep="grep Linux *.txt"
    alias ls="ls -l"

  - alias
  - unalias uniqc

  -